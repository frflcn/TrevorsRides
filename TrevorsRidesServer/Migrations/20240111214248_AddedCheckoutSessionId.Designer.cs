// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrevorsRidesServer.Models;

#nullable disable

namespace TrevorsRidesServer.Migrations
{
    [DbContext(typeof(RidesModel))]
    [Migration("20240111214248_AddedCheckoutSessionId")]
    partial class AddedCheckoutSessionId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("TrevorsRidesHelpers.Ride.Ride", b =>
                {
                    b.Property<Guid>("RideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DriverID")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("DriversHistory")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("DriversHistoryFinalized")
                        .HasColumnType("BLOB");

                    b.Property<string>("DropOff")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pickup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RideEvents")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RidePlanUpdates")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RiderID")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RidersHistory")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("RidersHistoryFinalized")
                        .HasColumnType("BLOB");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Stops")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RideId");

                    b.ToTable("CompletedRides");
                });

            modelBuilder.Entity("TrevorsRidesHelpers.Ride.RideInProgress", b =>
                {
                    b.Property<Guid>("RideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("CheckoutSessionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DriverID")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("DriversHistory")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("DriversHistoryFinalized")
                        .HasColumnType("BLOB");

                    b.Property<string>("DropOff")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pickup")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RideEvents")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("RidePlanUpdates")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RiderID")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RidersHistory")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("RidersHistoryFinalized")
                        .HasColumnType("BLOB");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Stops")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RideId");

                    b.HasIndex("RiderID")
                        .IsUnique();

                    b.ToTable("RidesInProgress");
                });

            modelBuilder.Entity("TrevorsRidesServer.Models.DriverAccountEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RetryCount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RideSessionToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionTokens")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DriverAccounts");
                });

            modelBuilder.Entity("TrevorsRidesServer.Models.DriverAccountSetupEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailVerificationCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneVerificationCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DriverAccountSetups");
                });

            modelBuilder.Entity("TrevorsRidesServer.Models.RiderAccountEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RetryCount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RideSessionToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionTokens")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RiderAccounts");
                });

            modelBuilder.Entity("TrevorsRidesServer.Models.RiderAccountSetupEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailVerificationCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneVerificationCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RiderAccountSetups");
                });
#pragma warning restore 612, 618
        }
    }
}
